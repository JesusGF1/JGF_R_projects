geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0)
df %>% group_by(treatment) %>% summarize(n = n()) %>% ggplot(aes(x="", y=n, fill=sex))+
geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0)
df %>% group_by(treatment) %>% summarize(n = n()) %>% ggplot(aes(x="", y=n, fill=treatment))+
geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0)
df %>% group_by(treatment) %>% summarize(n = n()) %>% ggplot(aes(x="", y=n, fill=treatment))+
geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
data %>% group_by(sex) %>% summarize(n = n()) %>% ggplot(aes(x="", y=n, fill=sex))+
geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0) + scale_fill_brewer("Blues") + blank_theme +
theme(axis.text.x=element_blank())+
geom_text(aes(y = n/3 + c(0, cumsum(n)[-length(n)]),
label = round(100-n/231*100, 1)), size=5)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
df %>% group_by(sex) %>% summarize(n = n()) %>% ggplot(aes(x="", y=n, fill=sex))+
geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0) + scale_fill_brewer("Blues") + blank_theme +
theme(axis.text.x=element_blank())+
geom_text(aes(y = n/3 + c(0, cumsum(n)[-length(n)]),
label = round(100-n/231*100, 1)), size=5)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
df %>% group_by(sex) %>% summarize(n = n()) %>% ggplot(aes(x="", y=n, fill=sex))+
geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0) + scale_fill_brewer("Blues") + blank_theme + labs(title = "sex")+
theme(axis.text.x=element_blank())+
geom_text(aes(y = n/3 + c(0, cumsum(n)[-length(n)]),
label = round(100-n/231*100, 1)), size=5)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
df %>% group_by(sex) %>% summarize(n = n()) %>% ggplot(aes(x="", y=n, fill=sex))+
geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0) + scale_fill_brewer(palette = "BrBG") + blank_theme + labs(title = "sex")+
theme(axis.text.x=element_blank())+
geom_text(aes(y = n/3 + c(0, cumsum(n)[-length(n)]),
label = round(100-n/231*100, 1)), size=5)
df %>% group_by(sex) %>% summarize(n = n()) %>% ggplot(aes(x="", y=n, fill=sex))+
geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0) + scale_fill_brewer(palette = "Blues") + blank_theme + labs(title = "sex")+
theme(axis.text.x=element_blank())+
geom_text(aes(y = n/3 + c(0, cumsum(n)[-length(n)]),
label = round(100-n/231*100, 1)), size=5)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
df %>% group_by(sex) %>% summarize(n = n()) %>% ggplot(aes(x="", y=n, fill=sex))+
geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0) + scale_fill_brewer(palette = "Blues") + blank_theme +
theme(axis.text.x=element_blank())+
geom_text(aes(y = n/3 + c(0, cumsum(n)[-length(n)]),
label = paste(round(100-n/231*100, 1), "%", sep = "")), size=5) + labs(fill = "Sex")
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
df %>% group_by(treatment) %>% summarize(n = n()) %>% ggplot(aes(x="", y=n, fill=treatment))+
geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0) + scale_fill_brewer(palette = "Blues") + blank_theme +
theme(axis.text.x=element_blank())+
geom_text(aes(y = n/3 + c(0, cumsum(n)[-length(n)]),
label = paste(round(100-n/231*100, 1), "%", sep = "")), size=5) + labs(fill = "Sex")
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
df %>% group_by(treatment) %>% summarize(n = n()) %>% ggplot(aes(x="", y=n, fill=treatment))+
geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0) + scale_fill_brewer(palette = "Blues") + blank_theme +
theme(axis.text.x=element_blank())+
geom_text(aes(y = n/2 + c(0, cumsum(n)[-length(n)]),
label = paste(round(100-n/231*100, 1), "%", sep = "")), size=5) + labs(fill = "Sex")
df %>% group_by(sex) %>% summarize(n = n())
library(tidyverse)
library(ggplot2)
library(pastecs)
install.packages("pastecs")
library(tidyverse)
library(ggplot2)
library(pastecs)
tablecsv <- read.csv("datafile.csv",sep = ";")
df <-tablecsv[,1:13]
colnames(df)
summary(df)
df %>%  summary()
str(tablecsv)
stat.desc(df)
stat.desc(df[7:13])
meme <- stat.desc(df[7:13])
View(meme)
meme <- round(stat.desc(df[7:13]),2)
View(meme)
meme <- round(stat.desc(df[7:13]),3)
View(meme)
tablecsv <-read.csv("table.csv",row.names=1)
df <- as.matrix(df)
heatmap(df[geneshigh,], cexRow = 0.75)
library(matlib)
library(dplyr)
tablecsv <-read.csv("table.csv",row.names=1)
variance<- ((PCA$sdev^2/sum(PCA$sdev^2))*100)
df <- as.matrix(df)
heatmap(df[geneshigh,], cexRow = 0.75)
tablecsv <-read.csv("table.csv",row.names=1)
library(matlib)
library(dplyr)
tablecsv <-read.csv("table.csv",row.names=1)
tablecsv <-read.csv("table.csv",row.names=1)
df <- tablecsv[1:8] #Con esto me quedo con los genes
rownames(df) <- rownames(df) #Esto son los rownames de la df
PCA <-princomp(df, cor=FALSE,scores=TRUE) #El objeto PCA tiene loadings, components, sdev
PCA[1:7] #Esto son los primeros 7 components de la PCA
df <- tablecsv[1:8] #Con esto me quedo con los genes
rownames(df) <- rownames(df) #Esto son los rownames de la df
PCA <-princomp(df, cor=FALSE,scores=TRUE) #El objeto PCA tiene loadings, components, sdev
PCA[1:7] #Esto son los primeros 7 components de la PCA
variance<- ((PCA$sdev^2/sum(PCA$sdev^2))*100)
plot(variance,type="s", ylab="Perc of variance", xlab="PCA comp")
plot(PCA$loadings)
text(PCA$loadings, labels=row.names(PCA$loadings), pos=c(2,4,4,4,2,4))
tablecsv <-read.csv("table.csv",row.names=1)
dfnew <-transform(df, shr25 = df$shrJ0571*0.25+df$J0571*0.75, shr50 = df$shrJ0571*0.5+df$J0571*0.5, shr75 = df$shrJ0571*0.75+df$J0571*0.25)
PCA <-princomp(dfnew, cor=FALSE,scores=TRUE)
variance<- ((PCA$sdev^2/sum(PCA$sdev^2))*100)
newloads<- PCA$loadings
plot(variance,type="s", ylab="Perc of variance", xlab="PCA comp")
plot(PCA$loadings)
text(PCA$loadings, labels=row.names(PCA$loadings), pos=c(1,2,1,3,2,3,4,4,1))
df3 <- tablecsv %>% select(1:8,11)
PCA3 <- princomp(df3, cor=FALSE,scores=TRUE)
variance<- ((PCA3$sdev^2/sum(PCA3$sdev^2))*100)
newloads<- PCA3$loadings
plot(variance,type="s", ylab="Perc of variance", xlab="PCA comp")
plot(PCA3$loadings)
text(PCA3$loadings, labels=row.names(PCA3$loadings), pos=c(2,1,1,1,3,3,1,3,3,4))
sorteados <- sort(PCA3$scores[,"Comp.1"])
pc1low <- head(sorteados,20)
pc1high<-tail(sorteados,20)
sorteados2 <- sort(PCA3$scores[,"Comp.2"])
pc2low <- head(sorteados2,20)
pc2high<-tail(sorteados2,20)
pc1low <- as.matrix(pc1low)
pc2low <- as.matrix(pc2low)
lownames <- rownames(pc1low,pc2low)
pc1high <- as.matrix(pc1high)
pc2high <- as.matrix(pc2high)
highnames <-rownames(pc1high, pc2high)
low <- cbind(pc1low,pc2low)
high  <- cbind(pc1high,pc2high)
geneshigh <- rownames(high)
geneslow <- rownames(low)
df <- as.matrix(df)
heatmap(df[geneshigh,], cexRow = 0.75)
df <- as.matrix(df)
heatmap(df[geneshigh,], cexRow = 0.75)
View(PCA3)
# Chunk 1
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
# Chunk 2
#Para hacer casillas
ctrl + alt + i
# Chunk 3
ctrl + shift + m
%>%
%>%
# Chunk 4: load
tt <- tt_load("2021-02-09")
# Chunk 5
tt$lifetime_earn %>%
ggplot(aes(lifetime_earn, race, fill = gender)) +
geom_col(position = "dodge") +
scale_x_continuous(labels = dollar )
tt$student_debt %>%
mutate(race = fct_reorder(race, -loan_debt_pct)) %>%
ggplot(aes(year, loan_debt_pct, color = race)) +
geom_line() +
expand_limits(y = 0) +
scale_y_continuous(labels = percent) +
labs(y = "% of families with student loan debt")
tt$student_debt %>%
mutate(race = fct_reorder(race, -loan_debt_pct)) %>%
ggplot(aes(year, loan_debt, color = race)) +
geom_line() +
expand_limits(y = 0) +
scale_y_continuous(labels = dollar) +
labs(y = "Average loan debt")
tt$retirement %>%
mutate(race = fct_reorder(race, -retirement)) %>%
ggplot(aes(year, retirement, color = race)) +
geom_line() +
expand_limits(y = 0) +
scale_y_continuous(labels = dollar) +
labs(y = "Average family liquid retirement savings")
tt$home_owner %>%
mutate(race = fct_reorder(race, -home_owner_pct)) %>%
ggplot(aes(year, home_owner_pct, color = race)) +
geom_line() +
expand_limits(y = 0) +
scale_y_continuous(labels = percent) +
labs(y = "Home ownership percentage")
tt$race_wealth %>%
mutate(race = fct_reorder(race, -wealth_family)) %>%
ggplot(aes(year, wealth_family, color = race)) +
geom_line() +
expand_limits(y = 0) +
scale_y_continuous(labels = dollar) +
labs(y = "racewealth") +
facet_wrap(~ type)
# Chunk 6
plot_by_race <- function(data, column, labels = dollar ) {
data %>%
mutate(race = fct_reorder(race, -{{ column }})) %>%
ggplot(aes(year, {{ column }}, color = race)) +
geom_line() +
expand_limits(y = 0) +
scale_y_continuous(labels = labels)
}
last_year <- tt$race_wealth %>%
group_by(race) %>%
top_n(1,year)
tt$race_wealth %>%
mutate(race = fct_reorder(race, -wealth_family)) %>%
ggplot(aes(year, wealth_family, color = race)) +
geom_line() +
geom_text(aes(label = race), hjust = 0, data = last_year) +
expand_limits(y = 0, y ) +
scale_y_continuous(labels = dollar) +
facet_wrap(~type, scales = "free_y")
tt$race_wealth %>%
mutate(race = fct_reorder(race, -wealth_family)) %>%
ggplot(aes(year, wealth_family, color = race)) +
geom_line() +
geom_text(aes(label = race), hjust = 0, data = last_year) +
expand_limits(y = 0, x= 2022 ) +
scale_y_continuous(labels = dollar) +
facet_wrap(~type, scales = "free_y")
tt$race_wealth %>%
mutate(race = fct_reorder(race, -wealth_family)) %>%
ggplot(aes(year, wealth_family, color = race)) +
geom_line() +
geom_text(aes(label = race), hjust = 0, data = last_year) +
expand_limits(y = 0, x= 2024 ) +
scale_y_continuous(labels = dollar) +
facet_wrap(~type, scales = "free_y")
tt$race_wealth %>%
mutate(race = fct_reorder(race, -wealth_family)) %>%
ggplot(aes(year, wealth_family, color = race)) +
geom_line() +
geom_text(aes(label = race), hjust = 0, data = last_year) +
expand_limits(y = 0, x= 2024 ) +
scale_y_continuous(labels = dollar) +
facet_wrap(~type, scales = "free_y") +
theme(legend.position = "none")
tt$race_wealth %>%
mutate(race = fct_reorder(race, -wealth_family)) %>%
ggplot(aes(year, wealth_family, color = race)) +
geom_line() +
geom_text(aes(label = race, color = NULL), hjust = 0, data = last_year) +
expand_limits(y = 0, x= 2024 ) +
scale_y_continuous(labels = dollar) +
facet_wrap(~type, scales = "free_y") +
theme(legend.position = "none")
tt$race_wealth %>%
mutate(race = fct_reorder(race, -wealth_family)) %>%
ggplot(aes(year, wealth_family, color = race)) +
geom_line() +
geom_text(aes(label = race, color = NULL, nudge_x = .2), hjust = 0, data = last_year) +
expand_limits(y = 0, x= 2024 ) +
scale_y_continuous(labels = dollar) +
facet_wrap(~type, scales = "free_y") +
theme(legend.position = "none")
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
tt <- tt_load("2020-12-22")
getwd()
setwd("C:/Users/jesus/proyectos/JGF_R_projects/tidytuesday")
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
tt <- tt_load("2020-12-22")
tt$`big-mac`
view()
tt$`big-mac` %>%
view()
bigmac <- tt$`big-mac`
bigmac %>%
ggplot(aes(date, local_price, color = name)) + geom_line()
bigmac <- tt$`big-mac` %>%
rename(country = name)
bigmac %>%
add_count(name, name = "country_total") %>%
filter(country_total == max(country_total)) %>%
ggplot(aes(date, local_price, color = name)) + geom_line() +
facet_wrap(~country) +
theme(legend.position = "none")
bigmac %>%
add_count(country, country = "country_total") %>%
filter(country_total == max(country_total)) %>%
ggplot(aes(date, local_price, color = country)) + geom_line() +
facet_wrap(~country) +
theme(legend.position = "none")
bigmac %>%
add_count(country, name = "country_total") %>%
filter(country_total == max(country_total)) %>%
ggplot(aes(date, local_price, color = country)) + geom_line() +
facet_wrap(~country) +
theme(legend.position = "none")
bigmac %>%
add_count(country, name = "country_total") %>%
filter(country_total == max(country_total)) %>%
ggplot(aes(date, local_price, color = country)) + geom_line() +
expand_limits(y=0) +
facet_wrap(~country) +
theme(legend.position = "none")
bigmac %>%
add_count(country, name = "country_total") %>%
filter(country_total == max(country_total)) %>%
ggplot(aes(date, local_price, color = country)) + geom_line() +
expand_limits(y=0) +
facet_wrap(~country, scales = "free_y") +
theme(legend.position = "none")
bigmac %>%
add_count(country, name = "country_total") %>%
filter(country_total == max(country_total)) %>%
mutate(country = fct_reorder(country, local_price, function(.) max(.) /min(.))) %>%
ggplot(aes(date, local_price, color = country)) + geom_line() +
expand_limits(y=0) +
facet_wrap(~country, scales = "free_y") +
theme(legend.position = "none") +
labs(x = "Time",
y = "Price in local currency")
bigmac %>%
add_count(country, name = "country_total") %>%
filter(country_total == max(country_total)) %>%
mutate(country = fct_reorder(country, local_price, function(.) max(.) /min(.))) %>%
ggplot(aes(date, local_price, color = country)) + geom_line() +
expand_limits(y=0) +
facet_wrap(~country, scales = "free_y") +
theme(legend.position = "none") +
labs(x = "Time",
y = "Price of Big Mac in local currency")
bigmac <- tt$`big-mac` %>%
rename(country = name) %>%
add_count(country, name = "country_total")
bigmac %>%
filter(country_total == max(country_total)) %>%
mutate(country = fct_reorder(country, local_price, function(.) max(.) /min(.))) %>%
ggplot(aes(date, local_price, color = country)) + geom_line() +
expand_limits(y=0) +
facet_wrap(~country, scales = "free_y") +
theme(legend.position = "none") +
labs(x = "Time",
y = "Price of Big Mac in local currency")
bigmac %>%
filter(country_total == max(country_total)) %>%
arrange(country, date) %>%
mutate(country = fct_reorder(country, local_price, function(.) last(.) /first(.))) %>%
ggplot(aes(date, local_price, color = country)) + geom_line() +
expand_limits(y=0) +
facet_wrap(~country, scales = "free_y") +
theme(legend.position = "none") +
labs(x = "Time",
y = "Price of Big Mac in local currency")
bigmac <- tt$`big-mac` %>%
rename(country = name) %>%
add_count(country, name = "country_total") %>%
arrange(country, date)
bigmac %>%
filter(country_total == max(country_total)) %>%
mutate(country = fct_reorder(country, local_price, function(.) last(.) /first(.))) %>%
ggplot(aes(date, local_price, color = country)) + geom_line() +
expand_limits(y=0) +
facet_wrap(~country, scales = "free_y") +
theme(legend.position = "none") +
labs(x = "Time",
y = "Price of Big Mac in local currency")
big_mac %>%
group_by(country) %>%
summarize(big_mac_inflation = last(local_price) / first(local_price)) %>%
arrange(desc(big_mac_inflation)) %>%
mutate(country = fct_reorder(country, big_mac_inflation)) %>%
ggplot(aes(big_mac_inflation, country)) +
geom_col() +
scale_x_log10()
bigmac %>%
group_by(country) %>%
summarize(big_mac_inflation = last(local_price) / first(local_price)) %>%
arrange(desc(big_mac_inflation)) %>%
mutate(country = fct_reorder(country, big_mac_inflation)) %>%
ggplot(aes(big_mac_inflation, country)) +
geom_col() +
scale_x_log10()
bigmac %>%
filter(country_total == max(country_total)) %>%
group_by(country) %>%
summarize(big_mac_inflation = last(local_price) / first(local_price)) %>%
arrange(desc(big_mac_inflation)) %>%
mutate(country = fct_reorder(country, big_mac_inflation)) %>%
ggplot(aes(big_mac_inflation, country)) +
geom_col() +
scale_x_log10()
bigmac %>%
filter(country_total == max(country_total)) %>%
group_by(country) %>%
summarize(big_mac_inflation = last(local_price) / first(local_price)) %>%
arrange(desc(big_mac_inflation)) %>%
mutate(country = fct_reorder(country, big_mac_inflation)) %>%
ggplot(aes(big_mac_inflation, country)) +
geom_col() +
scale_x_log10(1,3,10,30,100)
bigmac %>%
filter(country_total == max(country_total)) %>%
group_by(country) %>%
summarize(big_mac_inflation = last(local_price) / first(local_price)) %>%
arrange(desc(big_mac_inflation)) %>%
mutate(country = fct_reorder(country, big_mac_inflation)) %>%
ggplot(aes(big_mac_inflation, country)) +
geom_col() +
scale_x_log10(1,3,10,30,100) +
labs(x = "Price of Big Mac in 2020/ Price of Big Mac in 2000")
bigmac %>%
filter(country_total == max(country_total)) %>%
group_by(country) %>%
summarize(big_mac_inflation = last(local_price) / first(local_price)) %>%
arrange(desc(big_mac_inflation)) %>%
mutate(country = fct_reorder(country, big_mac_inflation)) %>%
ggplot(aes(big_mac_inflation, country)) +
geom_col() +
geom_text(aes(label = paste0(round(big_mac_inflation, 1), "X")), hjust = 0) +
scale_x_log10(1,3,10,30,100) +
expand_limits(x = 130)
big_mac %>%
filter(country_total == max(country_total)) %>%
group_by(date) %>%
mutate(us_price = local_price[iso_a3 == "USA"]) %>%
mutate(big_mac_ex = local_price / us_price) %>%
select(date, iso_a3, country, local_price, dollar_ex, us_price, big_mac_ex)
bigmac %>%
filter(country_total == max(country_total)) %>%
group_by(date) %>%
mutate(us_price = local_price[iso_a3 == "USA"]) %>%
mutate(big_mac_ex = local_price / us_price) %>%
select(date, iso_a3, country, local_price, dollar_ex, us_price, big_mac_ex)
bigmac %>%
filter(country_total == max(country_total)) %>%
group_by(date) %>%
mutate(usd_price = local_price[iso_a3 == "USA"]) %>%
mutate(big_mac_ex = local_price / us_price) %>%
select(date, iso_a3, country, local_price, dollar_ex, us_price, big_mac_ex, usd_raw)
bigmac %>%
filter(country_total == max(country_total)) %>%
group_by(date) %>%
mutate(usd_price = local_price[iso_a3 == "USA"]) %>%
mutate(big_mac_ex = local_price / us_price) %>%
select(date, iso_a3, country, local_price, dollar_ex, usd_price, big_mac_ex, usd_raw)
bigmac %>%
filter(country_total == max(country_total)) %>%
group_by(date) %>%
mutate(usd_price = local_price[iso_a3 == "USA"]) %>%
mutate(big_mac_ex = local_price / usd_price) %>%
select(date, iso_a3, country, local_price, dollar_ex, usd_price, big_mac_ex, usd_raw)
bigmac %>%
filter(country_total == max(country_total)) %>%
group_by(date) %>%
mutate(usd_price = local_price[iso_a3 == "USA"]) %>%
mutate(big_mac_ex = local_price / usd_price) %>%
select(date, iso_a3, country, local_price, dollar_ex, usd_price, big_mac_ex, usd_raw) %>%
mutate(usd_recalculated = (big_mac_ex - dollar_ex) / dollar_ex)
